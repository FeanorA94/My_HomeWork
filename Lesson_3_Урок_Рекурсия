
// Задача 1: Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N. Использовать рекурсию, не использовать циклы.
// using System;

// class Program
// {
//     static void Main(string[] args)
//     {
//         int M = 5;
//         int N = 9;
//         Console.WriteLine("Вывод всех натуральных чисел от " + M + " до " + N + " включительно");
//         RecursivePrint(M, N);
//     }

//     static void RecursivePrint(int left, int right)
//     {
//         if (left > right)
//             return;
//         else
//         {
//             Console.Write(left + " ");
//             RecursivePrint(left + 1, right);
//         }
//     }
// }
// -------------------------------------------------------------------------------------------------------------------------------------------------
// Задача 2: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.

// using System;

// namespace AkkermanFunction
// {
//     class Program
//     {
//         static int Func(int m, int n)
//         {
//             if (n == 0)
//                 return m == 0 ? 1 : 0;
//             else if (m == 0)
//                 return Func(0, n - 1);
//             else
//                 return Func(m - 1, Func(m, n - 1));
//         }

//         static void Main(string[] args)
//         {
//             int m = Convert.ToInt32(Console.ReadLine());
//             int n = Convert.ToInt32(Console.ReadLine());

//             Console.WriteLine(Func(m, n));
//         }
//     }
// }
// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Задача 3: Задайте произвольный массив. Выведете его элементы, начиная с конца. Использовать рекурсию, не использовать циклы.

// using System;

// public class Program
// {
//     public static void Main()
//     {
//         var oldArray = new int[] { 1, 2, 3, 4, 5 };
//         PrintElementsRecursive(oldArray);
//     }

//     private static void PrintElementsRecursive(int[] array)
//     {
//         if (array == null || array.Length == 0) return;

//         PrintElement(array[^1]);
//         PrintElementsRecursive(array.Take(array.Length - 1).ToArray());
//     }

//     private static void PrintElement(int element)
//     {
//         Console.Write($"{element} ");
//     }
// }
